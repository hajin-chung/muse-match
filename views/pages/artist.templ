package pages

import "musematch/models"
import "musematch/views"
import "strconv"

templ ArtistPage(title string, user *models.User, profile *models.UserProfile, artGrid []models.ArtInfo) {
	@views.Layout(title) {
		@views.Header(user)
		<div class="flex w-full justify-center overflow-x-hidden">
			<div class="w-layout flex flex-col">
				<div class="h-5"></div>
				<div class="relative w-full">
					<img
						src={ "/image?id=banner-" + profile.User.Id }
						class="object-cover w-full aspect-banner rounded-2xl border-[1px] border-black overflow-clip"
					/>
					<img
						src={ profile.User.Picture }
						class="absolute bottom-0 translate-y-1/2 left-3 rounded-full w-20 h-20 border-2 border-black object-cover overflow-clip"
					/>
				</div>
				<div class="h-4"></div>
				<p class="pl-25 text-2xl font-bold">{ profile.User.Name }</p>
				<div class="h-5"></div>
				<div class="w-full flex items-center justify-between flex-wrap">
					<p class="ml-14 pl-2 border-l-2 border-black whitespace-pre-wrap w-1/2">
						{ profile.User.Description }
					</p>
					<div class="flex flex-col gap-2">
						if len(profile.User.InstagramId) > 0 {
							<div class="flex gap-1 items-center">
								<img src="/icons/instagram.svg" class="h-5 w-5"/>
								<p>{ profile.User.InstagramId }</p>
							</div>
						}
						if len(profile.User.FacebookId) > 0 {
							<div class="flex gap-1 items-center">
								<img src="/icons/facebook.svg" class="h-5 w-5"/>
								<p>{ profile.User.FacebookId }</p>
							</div>
						}
						if len(profile.User.TwitterId) > 0 {
							<div class="flex gap-1 items-center">
								<img src="/icons/x.svg" class="h-5 w-5"/>
								<p>{ profile.User.TwitterId }</p>
							</div>
						}
						for _, link := range profile.Link {
							<div class="flex gap-1 items-center">
								<img src="/icons/link.svg" class="h-5 w-5"/>
								<p>{ link.Content }</p>
							</div>
						}
						<a class="mt-1 flex gap-4 items-center p-1 border-2 border-black rounded-lg">
							<img src="/icons/landmark.svg" class="w-6 h-6"/>
							<p class="font-bold text-xl">전시장 가기</p>
						</a>
					</div>
				</div>
				<div class="h-10"></div>
				<div class="flex gap-1">
					<button id="list-button" class="flex gap-2 p-1 items-center border-[1px] border-gray-500">
						<img src="/icons/list.svg" class="w-5 h-5"/>
						<p class="text">시리즈</p>
					</button>
					<button id="grid-button" class="flex gap-2 p-1 items-center border-[1px] border-gray-500 bg-black">
						<img src="/icons/grid.svg" class="w-5 h-5 invert"/>
						<p class="text-white">그리드</p>
					</button>
				</div>
				<div class="h-3"></div>
				<div id="grid" class="w-full grid grid-cols-4 gap-4">
					for s := 0; s < 4; s++ {
						<div class="flex flex-col gap-4">
							for i := s; i < len(artGrid); i+=4 {
								<div class="flex flex-col gap-1">
									<img src={ "/image?id=" + artGrid[s].Thumbnail } class="w-full mb-1"/>
									<p class="font-bold">{ artGrid[s].Name }</p>
									<p class="font-thin text-xs">{ artGrid[s].Description }</p>
									<p class="text-xs">{ strconv.Itoa(artGrid[s].Price) }</p>
								</div>
							}
						</div>
					}
				</div>
				<div id="list" class="flex flex-col w-screen mx-expand">
					for _, artList := range profile.ArtList.List {
						<div class="flex flex-col w-full items-center px-4 py-4 gap-4 odd:bg-gray-100 even:bg-white">
							<div class="w-layout flex gap-4">
								<p class="font-bold text-xl">{ artList.Title }</p>
								<p class="font-bold text-xl">|</p>
								<p class="font-bold text-xl">{ strconv.Itoa(len(profile.ArtList.Item[artList.Id])) }작품</p>
							</div>
							<div class="w-full overflow-x-scroll">
								<div class="flex gap-4">
									for _, artId := range profile.ArtList.Item[artList.Id] {
										<div class="w-80 flex flex-col gap-1 flex-shrink-0">
											<img src={ "/image?id=" + profile.Arts[artId].Thumbnail } class="w-full aspect-thumbnail object-cover mb-2"/>
											<p class="font-bold">{ profile.Arts[artId].Name }</p>
											<p class="font-thin text-xs">{ profile.Arts[artId].Description }</p>
											<p class="text-xs">{ strconv.Itoa(profile.Arts[artId].Price) }</p>
										</div>
									}
								</div>
							</div>
						</div>
					}
				</div>
				<div class="h-20"></div>
				<div class="flex flex-col gap-4 px-20">
					<p class="font-bold text-xl">작가 노트</p>
					<p class="text-lg whitespace-pre-wrap">{ profile.User.Note }</p>
				</div>
				<div class="h-20"></div>
				<div class="flex flex-col gap-4 px-20">
					<p class="text-xl font-bold">이력</p>
					<div class="grid grid-cols-2 gap-3" id="histories">
						for _, history := range profile.History {
							<div id="history" class="flex gap-3 flex-col py-4 px-5 bg-gray-100 rounded-lg min-h-60">
								<p class="font-bold w-full outline-none pb-2 border-b-[1px] border-b-gray-500">{ history.Title }</p>
								<p class="h-full whitespace-pre-wrap">{ history.Content }</p>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
		<script type="module" src="/scripts/artist.js"></script>
	}
}
